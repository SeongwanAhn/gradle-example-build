apply plugin: "eclipse-wtp"

eclipse {
	jdt {
		 sourceCompatibility = config.java.source
		 targetCompatibility = config.java.target
	}

	project {
		 natures = ['org.springframework.ide.eclipse.core.springnature',
					'org.springsource.ide.eclipse.gradle.core.nature',
					'org.eclipse.jdt.core.javanature',
					'org.eclipse.xtext.ui.shared.xtextNature',
					'org.eclipse.wst.common.modulecore.ModuleCoreNature',
					'org.eclipse.wst.common.project.facet.core.nature']

		 buildCommand 'org.springframework.ide.eclipse.core.springbuilder'
	}

	classpath {
		defaultOutputDir = file("build/classes-eclipse")
		downloadSources = true

        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers "org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-${config.java.source}"

		file {
			withXml {
			    def node = it.asNode()

			    // add Tomcat Runtime
		        node.appendNode("classpathentry", [kind:"con", path: config.eclipse.servletRuntimeClasspath])
				    .appendNode("attributes")
				    .appendNode("attribute", [name: "owner.project.facets", value: "jst.web"])
		    }
		}
	}

	wtp {
		component {
			//  wtp servlet context
			contextPath = project.name
			deployName = project.name
		}

		facet {
			facet name: "jst.java", version: config.java.source
			facet name: "jst.web",  version: config.java.servlet
			facet name: "jpt.jpa",  version: config.java.jpa

			file {
				withXml {
					def node = it.asNode()
					// add Tomcat Runtime
					node.appendNode("runtime", [name: config.eclipse.servletRuntime])
				}
		  	}
		}
	}
}

eclipseJdt << {
	// projects have UTF-8 encoding
	File f = file(".settings/org.eclipse.core.resources.prefs")
   	f.write("eclipse.preferences.version=1\n")
    f.append("encoding/<project>=utf-8")
    		
	// and use unix linefeeds
    f = file(".settings/org.eclipse.core.runtime.prefs")
    f.write("eclipse.preferences.version=1\n")
    f.append("line.separator=\\n")
    
    // JPA settings
    f = file(".settings/org.eclipse.jpt.core.prefs")
    f.write("eclipse.preferences.version=1\n")
    f.append("org.eclipse.jpt.core.platform=generic2_1\n")
    f.append("org.eclipse.jpt.jpa.core.discoverAnnotatedClasses=true\n")
}

cleanEclipseJdt << {
	File f = file(".settings/org.eclipse.core.resources.prefs")
	if (f.exists()) f.delete()
	
	f = file(".settings/org.eclipse.core.runtime.prefs")
	if (f.exists()) f.delete()
	
	f = file(".settings/org.eclipse.jpt.core.prefs")
	if (f.exists()) f.delete()
}