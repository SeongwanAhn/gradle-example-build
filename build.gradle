apply plugin: "java"
apply plugin: "war"
apply plugin: "flyway"

apply from: "${rootDir}/gradle/version+configuration.gradle"
apply from: "${rootDir}/gradle/eclipse.gradle"
apply from: "${rootDir}/gradle/less.gradle"
apply from: "${rootDir}/gradle/release-tasks.gradle"
apply from: "${rootDir}/gradle/integration-test.gradle"

// build a release by default
defaultTasks "buildRelease"

group = "${config.project.group}"
archivesBaseName = "${config.project.archiveBaseName}"

// java config
sourceCompatibility = config.java.source
compileJava.options.encoding = 'UTF-8'

task wrapper(type: Wrapper) {
	gradleVersion = config.gradle.version
}

war {
	dependsOn "lessc"
}

javadoc {
	failOnError = false
}

flyway {
	url = config.flyway.url
	user = config.flyway.user
	password = config.flyway.password
	locations = ["filesystem:$rootDir/src/main/flyway"]
}

task flywayResetDatabase << { 
	description "Cleans, baselines and migrates the database" 
	tasks.flywayClean.execute()
	tasks.flywayBaseline.execute()
	tasks.flywayMigrate.execute()
}

assemble {
	dependsOn "cleanResources"
	dependsOn "war"
}

dependencies {
	def springVersion  = "4.1.+"
	def springSecurity = "3.2.+"
	def hibernate      = "4.3.+"
	
	compile "org.hibernate:hibernate-entitymanager:${hibernate}"
	compile "org.hibernate:hibernate-ehcache:${hibernate}"
	compile "org.hibernate:hibernate-validator:5.1.+"
	compile "org.hibernate:hibernate-search-orm:5.1.+"
	
	compile "org.springframework:spring-webmvc:${springVersion}"
	compile "org.springframework:spring-aspects:${springVersion}"
	compile "org.springframework:spring-orm:${springVersion}"
	compile "org.springframework:spring-context-support:${springVersion}"
	
	compile "org.springframework.data:spring-data-jpa:1.8.0.RELEASE"
	compile "org.thymeleaf:thymeleaf-spring4:2.1.4.RELEASE"
	
	compile "org.springframework.security:spring-security-web:${springSecurity}"
	compile "org.springframework.security:spring-security-config:${springSecurity}"
	compile "org.springframework.security:spring-security-taglibs:${springSecurity}"
	
  	compile "jstl:jstl:1.2"
	compile "joda-time:joda-time:2.+"
	compile "mysql:mysql-connector-java:5.1.+"
	compile "com.zaxxer:HikariCP:2.3.+"
	compile "commons-fileupload:commons-fileupload:1.3.+"
	compile "org.codehaus.jackson:jackson-jaxrs:1.9.+"
	compile "com.fasterxml.jackson.core:jackson-databind:2.5.+"
	compile "javax.mail:javax.mail-api:1.5.2"
	compile "com.sun.mail:javax.mail:1.5.2"
	
	compile "org.slf4j:slf4j-api:1.7.+"
	compile "ch.qos.logback:logback-classic:1.1.+"
	compile "org.codehaus.groovy:groovy-all:2.4.1"
	compile "com.googlecode.flyway:flyway-core:2.3.1"
	
	providedCompile "org.projectlombok:lombok:1.16.+"
	providedCompile "javax.servlet:javax.servlet-api:3.1.+"
	
	testCompile "junit:junit:4.12"
	testCompile "org.springframework:spring-test:${springVersion}"
}

repositories {
	mavenCentral()
}

buildscript {
	repositories {
		mavenCentral()
	}
    
	dependencies {
		classpath "com.github.houbie:lesscss-gradle-plugin:1.0.3-less-1.7.0"
		classpath "com.bmuschko:gradle-tomcat-plugin:2.0"
		classpath "org.flywaydb:flyway-gradle-plugin:3.1"
	}
}

gradle.taskGraph.whenReady { taskGraph ->
	
	if( taskGraph.hasTask(buildRelease)) {
		version.release = true
		version.conf = "RELEASE"
	}
	else if (taskGraph.hasTask(buildSnapshot)) {
		version.conf = "SNAPSHOT"
	}
	else {
		version.conf = username
	}
	
	sourceSets.main.resources.srcDir "$rootDir/src/main/config/${version.configuration}"
	
	println "*** release configured for: '${version.conf}'\n"
	println "*** building version: ${version}"
}
